.hero {

  --text--absolute-max-width: calc(100vw - (var(--page-width--padding) * 2));
  --content--max-width: min(var(--page-width,1600px), var(--text--absolute-max-width));

  --text--sp: var(--page-width--padding);
  --text--margin: var(--text--sp);
  --text--rte-negative: calc(var(--text--sp) * -1.25);

  @include mq($lg-up) {
    --text--margin: calc(var(--text--sp) * 0.4);
    --text--rte-negative: calc(var(--text--sp) * -0.25);
  }
  
  &.set-height {

    &--default {
      --height: var(--height--default);
    }

    &--min {
      // Not a mistake, we want this to use max().
      // We want it to act like a min-height.
      --height: max(var(--height--default),var(--height--min));
    }

    &--max {
      // Not a mistake, we want this to use min().
      // We want it to act like a max-height.
      --height: min(var(--height--default),var(--height--max));
    }

    &--clamp {
      --height: clamp(var(--height--min),var(--height--default),var(--height--max));
    }
  }

  &--item {
    --image--overlay-opacity: var(--mobile--image--overlay-opacity,0.65);

    display: block;
    width: 100%;
    position: relative;
    overflow: hidden;
    z-index: 1;
    vertical-align: bottom;

    @include mq($sm) {
      &:after {
        content: '';
        display: block;
        left: calc(var(--text--sp) * -1);
        position: relative;
        width: calc(100% + (var(--text--sp) * 2));
        height: var(--sp--1-4);
        margin: var(--text--sp) 0 0;
        background: var(--gradient);
      }
    }

    @include mq($md-up) {
      --image--overlay-opacity: var(--desktop--image--overlay-opacity,0.85);
    }
  }

  @include mq($md-up) {
    .page-width {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%,-50%);
      width: 100%;
      max-width: var(--content--max-width);
      padding: 0;
      height: 100%;
      z-index: 2;
    }
  }

  .image--outer {
    max-width: 100%; 
    height: var(--height);
    background: var(--color--background);

    &:before {
      content:'';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      // background: var(--gradient);
      background: var(--color--background);
      opacity: var(--image--overlay-opacity);
      z-index: 1;
    }

    .image--inner,
    .image--image {
      position: absolute;
      top:0;
      left:0;
      transform: unset;
      width: 100%;
      height: 100% !important;
      object-fit: cover;
      object-position: center;
      padding-top: 0 !important;
    }
  }

  &--text {
    // --color--text: var(--color--foreground);
    // padding: var(--text--sp) var(--text--sp) 0;
    padding: var(--text--sp) 0 0;
    position: relative;

    .hxl {
      line-height: 1.2;
      // color: var(--color--text);

      @include mq($sm) {
        font-size: var(--theme--font-size--h0);
      }
    }

    .rte {
      &, 
      * {
        // color: var(--color--text);
      }
    }

    .hxl + .rte {
      margin-top: var(--text--rte-negative);
    }

    > * {
      margin-bottom: var(--text--margin);

      &:last-child {
        margin-bottom: 0;
      }
    }

    @include mq($sm) {
      background: var(--color--background);
    }

    @include mq($md-up) {
      position: absolute;
      z-index: 2;
      bottom: 0;
      left: 0;
      padding: var(--text--sp);
    }
  }
}